{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true,\n  isAuthenticated: false\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"sources":["C:/Users/Jumanah.Colvin/JumanahsApplications/appWithRedux/01-starting-project/src/store/counter.js"],"names":["createSlice","initialCounterState","counter","showCounter","isAuthenticated","counterSlice","name","initialState","reducers","increment","state","increase","action","payload","decrement","toggle","counterActions","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,mBAAmB,GAAI;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE,IAA3B;AAAiCC,EAAAA,eAAe,EAAE;AAAlD,CAA7B;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAEN,mBAFe;AAG7BO,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACR,OAAN;AACH,KAHK;;AAINS,IAAAA,QAAQ,CAACD,KAAD,EAAQE,MAAR,EAAgB;AACpBF,MAAAA,KAAK,CAACR,OAAN,GAAgBQ,KAAK,CAACR,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACH,KANK;;AAONC,IAAAA,SAAS,CAACJ,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACR,OAAN;AACH,KATK;;AAUNa,IAAAA,MAAM,CAACL,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACP,WAAN,GAAoB,CAACO,KAAK,CAACP,WAA3B;AACH;;AAZK;AAHmB,CAAD,CAAhC;AAmBA,OAAO,MAAMa,cAAc,GAAGX,YAAY,CAACY,OAApC;AAEP,eAAeZ,YAAY,CAACa,OAA5B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialCounterState =  { counter: 0, showCounter: true, isAuthenticated: false };\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: initialCounterState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        toggle(state) {\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    }\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default counterSlice.reducer;"]},"metadata":{},"sourceType":"module"}